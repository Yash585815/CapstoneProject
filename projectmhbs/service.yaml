apiVersion: v1
kind: Service
metadata:
  name: mhbs-backend-service
  namespace: default
  labels:
    app: mhbs-backend
    tier: backend
spec:
  type: ClusterIP  # Change to LoadBalancer or NodePort for external access
  selector:
    app: mhbs-backend
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  sessionAffinity: None

---
# NodePort Service for external access (alternative to ClusterIP)
# Uncomment this if you want to access the application from outside the cluster
apiVersion: v1
kind: Service
metadata:
  name: mhbs-backend-nodeport
  namespace: default
  labels:
    app: mhbs-backend
    tier: backend
    service-type: external
spec:
  type: NodePort
  selector:
    app: mhbs-backend
  ports:
  - name: http
    port: 80
    targetPort: 8080
    nodePort: 30080  # External port (30000-32767 range)
    protocol: TCP
  sessionAffinity: None

---
# LoadBalancer Service for cloud environments (alternative)
# Uncomment this if you're running on a cloud provider that supports LoadBalancer
# apiVersion: v1
# kind: Service
# metadata:
#   name: mhbs-backend-loadbalancer
#   namespace: default
#   labels:
#     app: mhbs-backend
#     tier: backend
#     service-type: loadbalancer
#   annotations:
#     # Cloud provider specific annotations
#     # For AWS:
#     # service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#     # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
#     # For Azure:
#     # service.beta.kubernetes.io/azure-load-balancer-internal: "false"
#     # For GCP:
#     # cloud.google.com/load-balancer-type: "External"
# spec:
#   type: LoadBalancer
#   selector:
#     app: mhbs-backend
#   ports:
#   - name: http
#     port: 80
#     targetPort: 8080
#     protocol: TCP
#   sessionAffinity: None
#   loadBalancerSourceRanges:
#   - 0.0.0.0/0  # Allow traffic from all IPs (restrict in production)

---
# Headless Service for internal service discovery
apiVersion: v1
kind: Service
metadata:
  name: mhbs-backend-headless
  namespace: default
  labels:
    app: mhbs-backend
    tier: backend
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None  # This makes it headless
  selector:
    app: mhbs-backend
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  sessionAffinity: None